/*
 * Copyright (C) 2019 Integrity Solutions
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.is2300.rcp.desktop;

import com.is2300.rcp.StartPrinting;
import com.is2300.rcp.enums.SysExits;
import com.is2300.rcp.printer.FileFilterFactory;
import com.is2300.rcp.printer.FormattedPrinter;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileFilter;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Sean Carrick &lt;sean at carricktrucking dot com&gt;
 */
public class RcpFrame extends javax.swing.JFrame {
    private FileFilter extFilter = null;
    private File curDir = new File(System.getProperty("user.home"));
    private File projDir = new File(System.getProperty("user.home") 
            + System.getProperty("file.separator") + ".isrcp/projects");
    private int folders = 0;
    private int files = 0;
    private long startTime = 0;
    private long endTime = 0;
    
    /**
     * Creates new form RcpFrame
     */
    public RcpFrame() {
        initComponents();
        
        this.setTitle("Integrity Solutions: Recursive Code Printer v. " 
                + StartPrinting.MAJOR + "." + StartPrinting.MINOR + "."
                + StartPrinting.BUILD);
        
        Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize();
        int left = (scrSize.width - this.getWidth() ) / 2;
        int top = (scrSize.height - this.getHeight() ) / 2;
        this.setLocation(left, top);
        
        this.getRootPane().setDefaultButton(btnCancel);
        
        getInstalledPrinters();
        
        if ( !projDir.exists() ) {
            projDir.mkdirs();
        }
        
        this.txtSrcFolder.setText(System.getProperty("user.home"));
        this.txtProjectName.setText("[Type or Select Project Name]");
        this.CanPrint(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSrcFolder = new javax.swing.JTextField();
        btnBrowseFolders = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboLanguage = new javax.swing.JComboBox<>();
        btnCancel = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cboSystemPrinters = new javax.swing.JComboBox<>();
        btnAbout = new javax.swing.JButton();
        lblLastPrint = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtProjectName = new javax.swing.JTextField();
        btnBrowseProjects = new javax.swing.JButton();
        pnlProgress = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pbJob = new javax.swing.JProgressBar();
        pbFolder = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        txtCurrentFolder = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("IS Recursive Code Printer Utility");
        setResizable(false);

        jLabel1.setDisplayedMnemonic('F');
        jLabel1.setLabelFor(txtSrcFolder);
        jLabel1.setText("Top-Level Source Code Folder:");

        txtSrcFolder.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CanPrint(evt);
            }
        });

        btnBrowseFolders.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/is2300/rcp/desktop/Find.png"))); // NOI18N
        btnBrowseFolders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findFolderClick(evt);
            }
        });

        jLabel2.setDisplayedMnemonic('L');
        jLabel2.setLabelFor(cboLanguage);
        jLabel2.setText("Project Language:");

        cboLanguage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- SELECT PROGRAMMING LANGUAGE --", "Ada Body (code: adab)", "Ada Specification (code: adas)", "Arduino / Nano Sketch (code: ardns)", "ASP Classic (code: asp)", "ASP.Net (code: aspnet)", "Bash Scripting (code: bash)", "BASIC (code: basic)", "Batch Files (code: bat)", "C (code: c)", "C++ (code: cpp)", "C# (code: csharp)", "Objective C (code: objc)", "CGI (code: cgi)", "Cold Fusion (code: cold)", "Digital Mars (code: dm)", "Erlang (code: erl)", "Flash (code: flash)", "Flash / Flex Action (code: flex)", "HTML (code: html)", "J# (code: jsharp)", "Java (code: java)", "JavaScript (code: js)", "Lua Script (code: lua)", "Mathematica (code: math)", "MetaTrader (code: meta)", "Perl (code: perl)", "PHP (code: php)", "Python (code: python)", "Python Notebook (code: jupyter)", "R Language (code: r)", "Ruby (code: ruby)", "Ruby on Rails (code: rails)", "SSL (code: ssl)", "TCL (code: tcl)", "Unreal Script (code: us)", "VB.net (code: vbnet)", "Visual Basic / Visual Basic Script (code: vb)", "XML (code: xml)" }));
        cboLanguage.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                languageSelectionChanged(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/is2300/rcp/desktop/close.png"))); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Close");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAction(evt);
            }
        });

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/is2300/rcp/desktop/Print.png"))); // NOI18N
        btnPrint.setMnemonic('P');
        btnPrint.setText("Print Project");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoPrintJob(evt);
            }
        });

        jLabel3.setDisplayedMnemonic('U');
        jLabel3.setLabelFor(cboSystemPrinters);
        jLabel3.setText("Select Printer to Use:");

        cboSystemPrinters.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSystemPrinters.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                printerSelectionChanged(evt);
            }
        });

        btnAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/is2300/rcp/desktop/About.png"))); // NOI18N
        btnAbout.setText("About");
        btnAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutClick(evt);
            }
        });

        lblLastPrint.setText("Last Print Run: [NEVER]");

        jLabel4.setText("Project Name:");

        txtProjectName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ProjectGotFocus(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ProjectLostFocus(evt);
                CanPrint(evt);
            }
        });

        btnBrowseProjects.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/is2300/rcp/desktop/Project.png"))); // NOI18N
        btnBrowseProjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProjectClick(evt);
            }
        });

        pnlProgress.setBorder(javax.swing.BorderFactory.createTitledBorder("Printing Progress"));
        pnlProgress.setEnabled(false);

        jLabel6.setText("Total Job:");
        jLabel6.setEnabled(false);

        jLabel7.setText("Current Folder:");
        jLabel7.setEnabled(false);

        pbJob.setEnabled(false);

        pbFolder.setEnabled(false);

        jLabel5.setText("Current Folder:");
        jLabel5.setEnabled(false);

        txtCurrentFolder.setEditable(false);
        txtCurrentFolder.setText("[NONE]");
        txtCurrentFolder.setEnabled(false);

        javax.swing.GroupLayout pnlProgressLayout = new javax.swing.GroupLayout(pnlProgress);
        pnlProgress.setLayout(pnlProgressLayout);
        pnlProgressLayout.setHorizontalGroup(
            pnlProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProgressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pbJob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pbFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCurrentFolder))
                .addContainerGap())
        );
        pnlProgressLayout.setVerticalGroup(
            pnlProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProgressLayout.createSequentialGroup()
                .addGroup(pnlProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCurrentFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(pbJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(pbFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboSystemPrinters, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboLanguage, javax.swing.GroupLayout.Alignment.LEADING, 0, 473, Short.MAX_VALUE))
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnAbout)
                                .addGap(46, 46, 46)
                                .addComponent(lblLastPrint)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrint)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSrcFolder)
                                    .addComponent(txtProjectName))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBrowseFolders)
                                    .addComponent(btnBrowseProjects)))
                            .addComponent(pnlProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnBrowseProjects)
                    .addComponent(txtProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnBrowseFolders)
                    .addComponent(txtSrcFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cboSystemPrinters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnPrint)
                    .addComponent(btnAbout)
                    .addComponent(lblLastPrint))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getInstalledPrinters() {
        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(
                null, null);
        
        cboSystemPrinters.removeAllItems();
        for ( PrintService printer : printServices ) {
            cboSystemPrinters.addItem(printer.getName());
        }
        
        cboSystemPrinters.setSelectedItem(
                PrintServiceLookup.lookupDefaultPrintService().getName());
    }
    
    private void storeProjectName() {
        String projFileName = this.txtProjectName.getText().replace(" ", "_");
        
        File project = new File(StartPrinting.PROPS.getProperty("project.home")
                + System.getProperty("file.separator") + projFileName);
        
        if ( !project.exists() ) {
            try {
                project.createNewFile();
            } catch (IOException ex) {
                String msg = ex.getMessage();
                JOptionPane.showMessageDialog(this, msg, "Input/Ouput Exception", 
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try (BufferedWriter out = new BufferedWriter(new FileWriter(project))) {
            StringBuilder sb = new StringBuilder();
            sb.append(LocalDate.now().toString()).append("\n");
            sb.append(txtSrcFolder.getText()).append("\n");
            sb.append(cboLanguage.getSelectedItem().toString());
            
            out.write(sb.toString());
        } catch ( IOException ex ) {
                String msg = ex.getMessage();
                JOptionPane.showMessageDialog(this, msg, "Input/Ouput Exception", 
                        JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void enableProgressControls() {
        this.jLabel5.setEnabled(true);
        this.jLabel6.setEnabled(true);
        this.jLabel7.setEnabled(true);
        this.pnlProgress.setEnabled(true);
        this.pbFolder.setEnabled(true);
        this.pbJob.setEnabled(true);
        this.txtCurrentFolder.setEnabled(true);
    }
    
    private void disableProgressControls() {
        this.pbFolder.setValue(0);
        this.pbJob.setValue(0);
        this.jLabel5.setEnabled(false);
        this.jLabel6.setEnabled(false);
        this.jLabel7.setEnabled(false);
        this.pnlProgress.setEnabled(false);
        this.pbFolder.setEnabled(false);
        this.pbJob.setEnabled(false);
        this.txtCurrentFolder.setEnabled(false);
    }
    
    private void countWalk(File file) {
        if ( file.isDirectory() ) {
            for ( File f : file.listFiles(extFilter) ) {
                if ( f.isDirectory() ) {
                    folders++;
                    countWalk(f);
                }
                files++;
            }
            folders++;
        }
    }
    
    private boolean print(String pathToFiles, FileFilter filter) {
        if ( pathToFiles == null ) {
            throw new NullPointerException("The path cannot be null.");
        }
        
        boolean printed = false;
        File file = new File(pathToFiles);
        
        for ( File f : file.listFiles(filter) ) {
            if ( f.isDirectory() ) {
                this.txtCurrentFolder.setText(f.getAbsolutePath());
                print(f.getAbsolutePath(), filter);
                System.out.println("Current Folder: " + f.getAbsolutePath());
                this.pbFolder.setValue(this.pbFolder.getValue() + 1);
            } else {
                FormattedPrinter printer = new FormattedPrinter(f.getAbsolutePath());

                printer.actionPerformed(null);
                System.out.println("Current File: " + f.getName());
            }
        }

        return printed;
    }
    
    private boolean isReady() {
        boolean ready = false;
        
        if ( !this.txtProjectName.getText().isBlank()
                && !this.txtSrcFolder.getText().isBlank()
                && !this.cboLanguage.getSelectedItem().equals(
                        "-- SELECT PROGRAMMING LANGUAGE --") ) {
            ready = true;
        }
        
        return ready;
    }
    
    private void CancelAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAction
        this.setVisible(false);
        
        StartPrinting.exit(SysExits.EX_OPCANCEL);
    }//GEN-LAST:event_CancelAction

    private void findFolderClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findFolderClick
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setMultiSelectionEnabled(false);
        chooser.setDialogTitle("Select Top-Level Project Folder to Print");
        chooser.setCurrentDirectory(curDir);
        
        int choice = chooser.showOpenDialog(this);
        
        if ( choice == JFileChooser.APPROVE_OPTION ) {
            curDir = chooser.getSelectedFile();
            txtSrcFolder.setText(curDir.getAbsolutePath());
        }
    }//GEN-LAST:event_findFolderClick

    private void languageSelectionChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_languageSelectionChanged
        if ( !cboLanguage.getSelectedItem().equals(
                "-- SELECT PROGRAMMING LANGUAGE --") ) {
            CanPrint(null);
        }
    }//GEN-LAST:event_languageSelectionChanged

    private void printerSelectionChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_printerSelectionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_printerSelectionChanged

    private void aboutClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutClick
        AboutDialog about = new AboutDialog(this, true);
        about.setVisible(true);
    }//GEN-LAST:event_aboutClick

    private void ProjectGotFocus(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ProjectGotFocus
        txtProjectName.selectAll();
    }//GEN-LAST:event_ProjectGotFocus

    private void ProjectLostFocus(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ProjectLostFocus
        txtProjectName.select(0, 0);
        
        CanPrint(evt);
    }//GEN-LAST:event_ProjectLostFocus

    private void ProjectClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProjectClick
        SelectProjectDialog project = new SelectProjectDialog(this, true);
        project.setVisible(true);
        
        if ( project.selected == true ) {        
            this.txtProjectName.setText(project.projectName);
            this.txtSrcFolder.setText(project.getProjectPath(
                    project.projectName.replace(" ", "_")));
            this.lblLastPrint.setText("Last Printed On: " 
                    + StartPrinting.PROPS.getProperty(
                            project.projectName.replace(" ", "_")));
            
            int count = cboLanguage.getItemCount();
            for ( int x = 0; x < count; x++ ) {
                String item = cboLanguage.getItemAt(x);
                
                if ( item.contains(project.language) ) {
                    cboLanguage.setSelectedIndex(x);
                    break;
                }
            }
        }
        
        CanPrint(null);
    }//GEN-LAST:event_ProjectClick

    private void DoPrintJob(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoPrintJob
        this.startTime = System.currentTimeMillis();
        
        storeProjectName();
        
        enableProgressControls();
        
        countWalk(new File(this.txtSrcFolder.getText()));
        
        this.pbFolder.setMaximum(folders);
        this.pbJob.setMaximum(files);
        
        String language = this.cboLanguage.getSelectedItem().toString();
        int codeLoc = language.indexOf(":");
        int codeStart = codeLoc + 2;
        int codeEnd = language.indexOf(")");
        String lang = this.cboLanguage.getSelectedItem().toString().substring(
                codeStart, codeEnd);
        FileFilter filter = FileFilterFactory.createFileFilter(lang);
        
        print(this.txtSrcFolder.getText(), filter);
        
        disableProgressControls();
        
        this.endTime = System.currentTimeMillis();
        
        StringBuilder sb = new StringBuilder();
        sb.append("Processd:\n\t");
        sb.append("Folders: ").append(folders).append("\n\t");
        sb.append("Files: ").append(files).append("\n");
        sb.append("Total Time: ").append((int)(endTime - startTime) / 1000);
        
        JOptionPane.showMessageDialog(this, sb.toString(), "Job Report", 
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_DoPrintJob

    private void CanPrint(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CanPrint
        this.btnPrint.setEnabled(this.isReady());
    }//GEN-LAST:event_CanPrint

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
        } catch (ClassNotFoundException | InstantiationException 
                | IllegalAccessException 
                | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println(ex.getMessage());
            ex.printStackTrace(System.err);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RcpFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbout;
    private javax.swing.JButton btnBrowseFolders;
    private javax.swing.JButton btnBrowseProjects;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnPrint;
    private javax.swing.JComboBox<String> cboLanguage;
    private javax.swing.JComboBox<String> cboSystemPrinters;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblLastPrint;
    private javax.swing.JProgressBar pbFolder;
    private javax.swing.JProgressBar pbJob;
    private javax.swing.JPanel pnlProgress;
    private javax.swing.JTextField txtCurrentFolder;
    private javax.swing.JTextField txtProjectName;
    private javax.swing.JTextField txtSrcFolder;
    // End of variables declaration//GEN-END:variables
}
